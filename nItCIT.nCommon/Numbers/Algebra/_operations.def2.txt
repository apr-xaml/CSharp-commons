@comments
(
	Positive
	Negative
	Zero
)

@aliases
{
	Any := (N|Z|P)
}


@comment(Summing)
@binaryOperator(+, isCommutitive=true)
{
	(P + P) => P
	(P + N) => Any
	(N + N) => N


	@forEvery(token T in Any)
	{
		(T + Z) => T
	}
}


@comment(Substracting)
@binaryOperator(-)
{
	(P - P) => Any
	(P - N) => P
	(N - N) => Any
	(P - Z) => P
	(Z - P) => N
	(Z - N) => P
	(Z - Z) => Z
	(P - Z) => P
}


@comment(Multiplying)
@binaryOperator(*, isCommutitive=true)
{
	(P * P) => P
	(P * N) => N
	(N * N) => P

	@forEvery(token T in Any)
	{
		(T * Z) => Z
	}

}


@comment(Dividing)
@binaryOperator(/)
{
	(P / P) => P
	(P / N) => N
	(N / N) => P
	(Z / P) => Z
	(Z / N) => Z

	@forEvery(token T in Any)
	{
		(T / Z) => NEVER
		(Z / T) => Z
	}

}
